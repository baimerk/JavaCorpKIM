package lesson_8;

import lesson_7.Book;

public class StringStr {
    public static void main(String[] args) {
        String line = "Line";
        String line2 = new String("Line").intern(); // разница в том ЧТО сравнивается
        // Equals - сравнивает ссылки объектов.
        // Чаще метод Equals переопределяют в своем классе.

        boolean a = line.equals(line2);
        System.out.println(a);
        System.out.println(line == line2);
        // работа с коллекциями ты должен переопределить метод equals.
        Book book = new Book("22");
        Book book1 = new Book("22");
        boolean b = book.equals(book1);
        System.out.println(b);
    }
    // Обработка строк. В строках происходит склеивание и трансформация.
    // При такой манипуляции создаются дополнительные объекты
    // pull строк - ссылка в pull
    // String name = "Name";
    // String name = new String ("Name"); - всегда новый объект
    // оптимизация байтов. Иногда символы занимают не один байт, а несколько байтов.
    // Дедупликация - сравнивание не самих объектов, а их байтов (или наоборот).
    // интернирование строки - intern - обращение строки в pull за значением.
    // String Builder - всегда один объект - изменяемый (не может быть использован ключом).
    // String Buffer - потоко-безопасный. Но работает медленнее.
    // STRIP - позволяет убирать все пробелы при выводе информации
    // метод valueof -
    // метод join - позволяет разделить строки двоеточием или знаком и затем склеить их и вывести верно и красиво
    // метод concat -
    // метод compareTo - возвращает разницу в юникоде
    // метод joiner.charAt - возвращает букву под указанным индексом
    // метод equalsIgnoreCase - в таком случае при сравнивании мне не важно учитывать юникод
    // метод toLowerCase - в маленький регистр toUpperCase - в верхний регистр
    // метод temp.getChars - забирает символы и складывает в результат (затем мы выводим результат)
    // метод matcher.split - разделить и положить в какой-то объект.
    // метод temp (строка String).indexOf - возвращает значение номера вхождения в строку.
    // метод replase - первым параметром - что - вторым - чем заменить
    // метод trim и strip - посмотреть разницу.
    // метод substring - получить урезанную строку с первого по третий символ например. (третий не включаем)

    // ??? каждый раз создавалась новая строка. StringBuilder +append +insert +replase
    // repeat.
    // is blank is empty - is!!! -

}
